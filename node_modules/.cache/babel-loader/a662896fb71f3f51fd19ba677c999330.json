{"ast":null,"code":"var _jsxFileName = \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Aux from \"../../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../../store/actions\";\nimport NavIcon from './../NavIcon';\nimport NavBadge from './../NavBadge';\nimport NavItem from \"../NavItem\";\nimport LoopNavCollapse from './index';\n\nclass NavCollapse extends Component {\n  componentDidMount() {\n    const currentIndex = document.location.pathname.toString().split('/').findIndex(id => id === this.props.collapse.id);\n\n    if (currentIndex > -1) {\n      this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          isTrigger = _this$props.isTrigger;\n    let navItems = '';\n\n    if (this.props.collapse.children) {\n      const collapses = this.props.collapse.children;\n      navItems = Object.keys(collapses).map(item => {\n        item = collapses[item];\n\n        switch (item.type) {\n          case 'collapse':\n            return React.createElement(LoopNavCollapse, {\n              key: item.id,\n              collapse: item,\n              type: \"sub\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            });\n\n          case 'item':\n            return React.createElement(NavItem, {\n              layout: this.props.layout,\n              key: item.id,\n              item: item,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            });\n\n          default:\n            return false;\n        }\n      });\n    }\n\n    let itemTitle = this.props.collapse.title;\n\n    if (this.props.collapse.icon) {\n      itemTitle = React.createElement(\"span\", {\n        className: \"pcoded-mtext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.collapse.title);\n    }\n\n    let navLinkClass = ['nav-link'];\n    let navItemClass = ['nav-item', 'pcoded-hasmenu'];\n    const openIndex = isOpen.findIndex(id => id === this.props.collapse.id);\n\n    if (openIndex > -1) {\n      navItemClass = [...navItemClass, 'active'];\n\n      if (this.props.layout !== 'horizontal') {\n        navLinkClass = [...navLinkClass, 'active'];\n      }\n    }\n\n    const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\n\n    if (triggerIndex > -1) {\n      navItemClass = [...navItemClass, 'pcoded-trigger'];\n    }\n\n    const currentIndex = document.location.pathname.toString().split('/').findIndex(id => id === this.props.collapse.id);\n\n    if (currentIndex > -1) {\n      navItemClass = [...navItemClass, 'active'];\n\n      if (this.props.layout !== 'horizontal') {\n        navLinkClass = [...navLinkClass, 'active'];\n      }\n    }\n\n    const subContent = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: DEMO.BLANK_LINK,\n      className: navLinkClass.join(' '),\n      onClick: () => this.props.onCollapseToggle(this.props.collapse.id, this.props.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NavIcon, {\n      items: this.props.collapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), itemTitle, React.createElement(NavBadge, {\n      layout: this.props.layout,\n      items: this.props.collapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"pcoded-submenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, navItems));\n    let mainContent = '';\n\n    if (this.props.layout === 'horizontal') {\n      mainContent = React.createElement(\"li\", {\n        className: navItemClass.join(' '),\n        onMouseLeave: () => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type),\n        onMouseEnter: () => this.props.onCollapseToggle(this.props.collapse.id, this.props.type),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, subContent);\n    } else {\n      mainContent = React.createElement(\"li\", {\n        className: navItemClass.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, subContent);\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, mainContent);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    isOpen: state.isOpen,\n    isTrigger: state.isTrigger\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCollapseToggle: (id, type) => dispatch({\n      type: actionTypes.COLLAPSE_TOGGLE,\n      menu: {\n        id: id,\n        type: type\n      }\n    }),\n    onNavCollapseLeave: (id, type) => dispatch({\n      type: actionTypes.NAV_COLLAPSE_LEAVE,\n      menu: {\n        id: id,\n        type: type\n      }\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js"],"names":["React","Component","connect","withRouter","Aux","DEMO","actionTypes","NavIcon","NavBadge","NavItem","LoopNavCollapse","NavCollapse","componentDidMount","currentIndex","document","location","pathname","toString","split","findIndex","id","props","collapse","onCollapseToggle","type","render","isOpen","isTrigger","navItems","children","collapses","Object","keys","map","item","layout","itemTitle","title","icon","navLinkClass","navItemClass","openIndex","triggerIndex","subContent","BLANK_LINK","join","mainContent","onNavCollapseLeave","mapStateToProps","state","mapDispatchToProps","dispatch","COLLAPSE_TOGGLE","menu","NAV_COLLAPSE_LEAVE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Aux from \"../../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../../store/actions\";\nimport NavIcon from './../NavIcon';\nimport NavBadge from './../NavBadge';\nimport NavItem from \"../NavItem\";\nimport LoopNavCollapse from './index';\n\nclass NavCollapse extends Component {\n\n    componentDidMount() {\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\n        if (currentIndex > -1) {\n            this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\n        }\n    }\n\n    render() {\n        const {isOpen, isTrigger} = this.props;\n\n        let navItems = '';\n        if (this.props.collapse.children) {\n            const collapses = this.props.collapse.children;\n            navItems = Object.keys(collapses).map(item => {\n                item = collapses[item];\n                switch (item.type) {\n                    case 'collapse':\n                        return <LoopNavCollapse key={item.id} collapse={item} type=\"sub\" />;\n                    case 'item':\n                        return <NavItem layout={this.props.layout} key={item.id} item={item}/>;\n                    default:\n                        return false;\n                }\n            });\n        }\n\n        let itemTitle = this.props.collapse.title;\n        if (this.props.collapse.icon) {\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.collapse.title}</span>;\n        }\n\n        let navLinkClass = ['nav-link'];\n\n        let navItemClass = ['nav-item', 'pcoded-hasmenu'];\n        const openIndex = isOpen.findIndex(id => id === this.props.collapse.id);\n        if (openIndex > -1) {\n            navItemClass = [...navItemClass, 'active'];\n            if (this.props.layout !== 'horizontal') {\n                navLinkClass = [...navLinkClass, 'active'];\n            }\n        }\n\n        const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\n        if (triggerIndex > -1) {\n            navItemClass = [...navItemClass, 'pcoded-trigger'];\n        }\n\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\n        if (currentIndex > -1) {\n            navItemClass = [...navItemClass, 'active'];\n            if (this.props.layout !== 'horizontal') {\n                navLinkClass = [...navLinkClass, 'active'];\n            }\n        }\n\n        const subContent = (\n            <Aux>\n                <a href={DEMO.BLANK_LINK} className={navLinkClass.join(' ')} onClick={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\n                    <NavIcon items={this.props.collapse} />\n                    {itemTitle}\n                    <NavBadge layout={this.props.layout} items={this.props.collapse} />\n                </a>\n                <ul className=\"pcoded-submenu\">\n                    {navItems}\n                </ul>\n            </Aux>\n        );\n        let mainContent = '';\n        if (this.props.layout === 'horizontal') {\n            mainContent = (\n                <li className={navItemClass.join(' ')} onMouseLeave={() => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type)} onMouseEnter={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\n                    {subContent}\n                </li>\n            );\n        } else {\n            mainContent = (\n                <li className={navItemClass.join(' ')}>\n                    {subContent}\n                </li>\n            );\n        }\n\n        return (\n            <Aux>\n                {mainContent}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.layout,\n        isOpen: state.isOpen,\n        isTrigger: state.isTrigger\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCollapseToggle: (id, type) => dispatch({type: actionTypes.COLLAPSE_TOGGLE, menu: {id: id, type: type}}),\n        onNavCollapseLeave: (id, type) => dispatch({type: actionTypes.NAV_COLLAPSE_LEAVE, menu: {id: id, type: type}})\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));\n"]},"metadata":{},"sourceType":"module"}