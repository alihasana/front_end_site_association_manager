{"ast":null,"code":"import _objectSpread from \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actions';\nimport config from './../config';\n\nconst initialState = _objectSpread({\n  isOpen: [],\n  //for active default menu\n  isTrigger: []\n}, config, {\n  isFullScreen: false // static can't change\n\n});\n\nconst reducer = (state = initialState, action) => {\n  let trigger = [];\n  let open = [];\n\n  switch (action.type) {\n    case actionTypes.COLLAPSE_MENU:\n      return _objectSpread({}, state, {\n        collapseMenu: !state.collapseMenu\n      });\n\n    case actionTypes.COLLAPSE_TOGGLE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n        const triggerIndex = trigger.indexOf(action.menu.id);\n\n        if (triggerIndex > -1) {\n          open = open.filter(item => item !== action.menu.id);\n          trigger = trigger.filter(item => item !== action.menu.id);\n        }\n\n        if (triggerIndex === -1) {\n          open = [...open, action.menu.id];\n          trigger = [...trigger, action.menu.id];\n        }\n      } else {\n        open = state.isOpen;\n        const triggerIndex = state.isTrigger.indexOf(action.menu.id);\n        trigger = triggerIndex === -1 ? [action.menu.id] : [];\n        open = triggerIndex === -1 ? [action.menu.id] : [];\n      }\n\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_CONTENT_LEAVE:\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_COLLAPSE_LEAVE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n        const triggerIndex = trigger.indexOf(action.menu.id);\n\n        if (triggerIndex > -1) {\n          open = open.filter(item => item !== action.menu.id);\n          trigger = trigger.filter(item => item !== action.menu.id);\n        }\n\n        return _objectSpread({}, state, {\n          isOpen: open,\n          isTrigger: trigger\n        });\n      }\n\n      return _objectSpread({}, state);\n\n    case actionTypes.FULL_SCREEN:\n      return _objectSpread({}, state, {\n        isFullScreen: !state.isFullScreen\n      });\n\n    case actionTypes.FULL_SCREEN_EXIT:\n      return _objectSpread({}, state, {\n        isFullScreen: false\n      });\n\n    case actionTypes.CHANGE_LAYOUT:\n      return _objectSpread({}, state, {\n        layout: action.layout\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/store/reducer.js"],"names":["actionTypes","config","initialState","isOpen","isTrigger","isFullScreen","reducer","state","action","trigger","open","type","COLLAPSE_MENU","collapseMenu","COLLAPSE_TOGGLE","menu","triggerIndex","indexOf","id","filter","item","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","layout"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\nimport config from './../config';\n\nconst initialState = {\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n};\n\nconst reducer = (state = initialState, action) => {\n    let trigger = [];\n    let open = [];\n\n    switch (action.type) {\n        case actionTypes.COLLAPSE_MENU:\n            return {\n                ...state,\n                collapseMenu: !state.collapseMenu\n            };\n        case actionTypes.COLLAPSE_TOGGLE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n\n                if (triggerIndex === -1) {\n                    open = [...open, action.menu.id];\n                    trigger = [...trigger, action.menu.id];\n                }\n            } else {\n                open = state.isOpen;\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\n            }\n\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger\n            };\n        case actionTypes.NAV_CONTENT_LEAVE:\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger,\n            };\n        case actionTypes.NAV_COLLAPSE_LEAVE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n                return {\n                    ...state,\n                    isOpen: open,\n                    isTrigger: trigger,\n                };\n            }\n            return {...state};\n        case actionTypes.FULL_SCREEN :\n            return {\n                ...state,\n                isFullScreen: !state.isFullScreen\n            };\n        case actionTypes.FULL_SCREEN_EXIT:\n            return {\n                ...state,\n                isFullScreen: false\n            };\n        case actionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layout: action.layout\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}