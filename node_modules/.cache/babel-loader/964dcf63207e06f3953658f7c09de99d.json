{"ast":null,"code":"var _jsxFileName = \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/NavBar/NavLeft/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\nimport windowSize from 'react-window-size';\nimport NavSearch from './NavSearch';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass NavLeft extends Component {\n  render() {\n    let iconFullScreen = ['feather'];\n    iconFullScreen = this.props.isFullScreen ? [...iconFullScreen, 'icon-minimize'] : [...iconFullScreen, 'icon-maximize'];\n    let navItemClass = ['nav-item'];\n\n    if (this.props.windowWidth <= 575) {\n      navItemClass = [...navItemClass, 'd-none'];\n    }\n\n    let dropdownRightAlign = false;\n\n    if (this.props.rtlLayout) {\n      dropdownRightAlign = true;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: DEMO.BLANK_LINK,\n      className: \"full-screen\",\n      onClick: this.props.onFullScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: iconFullScreen.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: navItemClass.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      alignRight: dropdownRightAlign,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: 'link',\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Dropdown\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      href: DEMO.BLANK_LINK,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Action\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      href: DEMO.BLANK_LINK,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Another action\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      href: DEMO.BLANK_LINK,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Something else here\")))))), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NavSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isFullScreen: state.isFullScreen,\n    rtlLayout: state.rtlLayout\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFullScreen: () => dispatch({\n      type: actionTypes.FULL_SCREEN\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/NavBar/NavLeft/index.js"],"names":["React","Component","connect","Dropdown","windowSize","NavSearch","Aux","DEMO","actionTypes","NavLeft","render","iconFullScreen","props","isFullScreen","navItemClass","windowWidth","dropdownRightAlign","rtlLayout","BLANK_LINK","onFullScreen","join","mapStateToProps","state","mapDispatchToProps","dispatch","type","FULL_SCREEN"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Dropdown} from 'react-bootstrap';\nimport windowSize from 'react-window-size';\n\nimport NavSearch from './NavSearch';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass NavLeft extends Component {\n\n    render() {\n        let iconFullScreen = ['feather'];\n        iconFullScreen = (this.props.isFullScreen) ? [...iconFullScreen, 'icon-minimize'] : [...iconFullScreen, 'icon-maximize'];\n\n        let navItemClass = ['nav-item'];\n        if (this.props.windowWidth <= 575) {\n            navItemClass = [...navItemClass, 'd-none'];\n        }\n        let dropdownRightAlign = false;\n        if (this.props.rtlLayout) {\n            dropdownRightAlign = true;\n        }\n\n\n        return (\n            <Aux>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li><a href={DEMO.BLANK_LINK} className=\"full-screen\" onClick={this.props.onFullScreen}><i className={iconFullScreen.join(' ')} /></a></li>\n                    <li className={navItemClass.join(' ')}>\n                        <Dropdown alignRight={dropdownRightAlign}>\n                            <Dropdown.Toggle variant={'link'} id=\"dropdown-basic\">\n                                Dropdown\n                            </Dropdown.Toggle>\n                            <ul>\n                                <Dropdown.Menu>\n                                    <li><a className=\"dropdown-item\" href={DEMO.BLANK_LINK}>Action</a></li>\n                                    <li><a className=\"dropdown-item\" href={DEMO.BLANK_LINK}>Another action</a></li>\n                                    <li><a className=\"dropdown-item\" href={DEMO.BLANK_LINK}>Something else here</a></li>\n                                </Dropdown.Menu>\n                            </ul>\n                        </Dropdown>\n                    </li>\n                    <li className=\"nav-item\"><NavSearch/></li>\n                </ul>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isFullScreen: state.isFullScreen,\n        rtlLayout: state.rtlLayout\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFullScreen: () => dispatch({type: actionTypes.FULL_SCREEN}),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));\n"]},"metadata":{},"sourceType":"module"}