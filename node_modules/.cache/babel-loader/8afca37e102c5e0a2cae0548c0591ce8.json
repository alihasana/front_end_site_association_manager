{"ast":null,"code":"var _jsxFileName = \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/NavContent/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport windowSize from 'react-window-size';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport NavGroup from './NavGroup';\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass NavContent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scrollWidth: 0,\n      prevDisable: true,\n      nextDisable: false\n    };\n\n    this.scrollPrevHandler = () => {\n      const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n      let scrollWidth = this.state.scrollWidth - wrapperWidth;\n\n      if (scrollWidth < 0) {\n        this.setState({\n          scrollWidth: 0,\n          prevDisable: true,\n          nextDisable: false\n        });\n      } else {\n        this.setState({\n          scrollWidth: scrollWidth,\n          prevDisable: false\n        });\n      }\n    };\n\n    this.scrollNextHandler = () => {\n      const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n      const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\n      let scrollWidth = this.state.scrollWidth + (wrapperWidth - 80);\n\n      if (scrollWidth > contentWidth - wrapperWidth) {\n        scrollWidth = contentWidth - wrapperWidth + 80;\n        this.setState({\n          scrollWidth: scrollWidth,\n          prevDisable: false,\n          nextDisable: true\n        });\n      } else {\n        this.setState({\n          scrollWidth: scrollWidth,\n          prevDisable: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const navItems = this.props.navigation.map(item => {\n      switch (item.type) {\n        case 'group':\n          return React.createElement(NavGroup, {\n            layout: this.props.layout,\n            key: item.id,\n            group: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          });\n\n        default:\n          return false;\n      }\n    });\n    let mainContent = '';\n\n    if (this.props.layout === 'horizontal') {\n      let prevClass = ['sidenav-horizontal-prev'];\n\n      if (this.state.prevDisable) {\n        prevClass = [...prevClass, 'disabled'];\n      }\n\n      let nextClass = ['sidenav-horizontal-next'];\n\n      if (this.state.nextDisable) {\n        nextClass = [...nextClass, 'disabled'];\n      }\n\n      mainContent = React.createElement(\"div\", {\n        className: \"navbar-content sidenav-horizontal\",\n        id: \"layout-sidenav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: DEMO.BLANK_LINK,\n        className: prevClass.join(' '),\n        onClick: this.scrollPrevHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"sidenav-wrapper\",\n        className: \"sidenav-horizontal-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"sidenav-horizontal\",\n        className: \"nav pcoded-inner-navbar sidenav-inner\",\n        onMouseLeave: this.props.onNavContentLeave,\n        style: {\n          marginLeft: '-' + this.state.scrollWidth + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, navItems)), React.createElement(\"a\", {\n        href: DEMO.BLANK_LINK,\n        className: nextClass.join(' '),\n        onClick: this.scrollNextHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })));\n    } else {\n      mainContent = React.createElement(\"div\", {\n        className: \"navbar-content datta-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav pcoded-inner-navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, navItems)));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, mainContent);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    collapseMenu: state.collapseMenu\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNavContentLeave: () => dispatch({\n      type: actionTypes.NAV_CONTENT_LEAVE\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(NavContent)));","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/NavContent/index.js"],"names":["React","Component","connect","withRouter","PerfectScrollbar","windowSize","Aux","NavGroup","DEMO","actionTypes","NavContent","state","scrollWidth","prevDisable","nextDisable","scrollPrevHandler","wrapperWidth","document","getElementById","clientWidth","setState","scrollNextHandler","contentWidth","render","navItems","props","navigation","map","item","type","layout","id","mainContent","prevClass","nextClass","BLANK_LINK","join","onNavContentLeave","marginLeft","mapStateToProps","collapseMenu","mapDispatchToProps","dispatch","NAV_CONTENT_LEAVE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport windowSize from 'react-window-size';\n\nimport Aux from \"../../../../../hoc/_Aux\";\nimport NavGroup from './NavGroup';\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass NavContent extends Component {\n    state = {\n        scrollWidth: 0,\n        prevDisable: true,\n        nextDisable: false\n    };\n\n    scrollPrevHandler = () => {\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n\n        let scrollWidth = this.state.scrollWidth - wrapperWidth;\n        if(scrollWidth < 0) {\n            this.setState({scrollWidth: 0, prevDisable: true, nextDisable: false});\n        } else {\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\n        }\n    };\n\n    scrollNextHandler = () => {\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\n        const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\n\n        let scrollWidth = this.state.scrollWidth + (wrapperWidth - 80);\n        if (scrollWidth > (contentWidth - wrapperWidth)) {\n            scrollWidth = contentWidth - wrapperWidth + 80;\n            this.setState({scrollWidth: scrollWidth, prevDisable: false, nextDisable: true});\n        } else {\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\n        }\n    };\n\n    render() {\n        const navItems = this.props.navigation.map(item => {\n                switch (item.type) {\n                    case 'group':\n                        return <NavGroup layout={this.props.layout} key={item.id} group={item}/>;\n                    default:\n                        return false;\n                }\n            }\n        );\n\n        let mainContent = '';\n        if (this.props.layout === 'horizontal') {\n            let prevClass = ['sidenav-horizontal-prev'];\n            if (this.state.prevDisable) {\n                prevClass = [...prevClass, 'disabled'];\n            }\n            let nextClass = ['sidenav-horizontal-next'];\n            if (this.state.nextDisable) {\n                nextClass = [...nextClass, 'disabled'];\n            }\n\n            mainContent = (\n                <div className=\"navbar-content sidenav-horizontal\" id=\"layout-sidenav\">\n                    <a href={DEMO.BLANK_LINK} className={prevClass.join(' ')} onClick={this.scrollPrevHandler}><span/></a>\n                    <div id=\"sidenav-wrapper\" className=\"sidenav-horizontal-wrapper\">\n                        <ul id=\"sidenav-horizontal\" className=\"nav pcoded-inner-navbar sidenav-inner\" onMouseLeave={this.props.onNavContentLeave} style={{marginLeft: '-'+this.state.scrollWidth+'px'}}>\n                            {navItems}\n                        </ul>\n                    </div>\n                    <a href={DEMO.BLANK_LINK} className={nextClass.join(' ')} onClick={this.scrollNextHandler}><span/></a>\n                </div>\n            );\n        } else {\n            mainContent = (\n                <div className=\"navbar-content datta-scroll\">\n                    <PerfectScrollbar>\n                        <ul className=\"nav pcoded-inner-navbar\">\n                            {navItems}\n                        </ul>\n                    </PerfectScrollbar>\n                </div>\n            );\n        }\n\n        return (\n            <Aux>\n                {mainContent}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.layout,\n        collapseMenu: state.collapseMenu,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onNavContentLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE}),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavContent)));\n"]},"metadata":{},"sourceType":"module"}