{"ast":null,"code":"import _slicedToArray from \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/components/Staff/StaffsList.js\";\nimport React from 'react';\nimport $ from \"jquery\";\nimport OrgChart from \"orgchart\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString()\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString()\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nfunction StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}\n\nclass StaffsList extends React.Component {\n  componentDidMount() {\n    this.$el = $(this.el);\n    let data = {\n      'name': 'Lao Lao',\n      'title': 'general manager',\n      'children': [{\n        'name': 'Bo Miao',\n        'title': 'department manager',\n        'className': 'middle-level',\n        'children': [{\n          'name': 'Li Jing',\n          'title': 'senior engineer',\n          'className': 'product-dept'\n        }, {\n          'name': 'Li Xin',\n          'title': 'senior engineer',\n          'className': 'product-dept',\n          'children': [{\n            'name': 'To To',\n            'title': 'engineer',\n            'className': 'pipeline1'\n          }, {\n            'name': 'Fei Fei',\n            'title': 'engineer',\n            'className': 'pipeline1'\n          }, {\n            'name': 'Xuan Xuan',\n            'title': 'engineer',\n            'className': 'pipeline1'\n          }]\n        }]\n      }, {\n        'name': 'Su Miao',\n        'title': 'department manager',\n        'className': 'middle-level',\n        'children': [{\n          'name': 'Pang Pang',\n          'title': 'senior engineer',\n          'className': 'rd-dept'\n        }, {\n          'name': 'Hei Hei',\n          'title': 'senior engineer',\n          'className': 'rd-dept',\n          'children': [{\n            'name': 'Xiang Xiang',\n            'title': 'UE engineer',\n            'className': 'frontend1'\n          }, {\n            'name': 'Dan Dan',\n            'title': 'engineer',\n            'className': 'frontend1'\n          }, {\n            'name': 'Zai Zai',\n            'title': 'engineer',\n            'className': 'frontend1'\n          }]\n        }]\n      }]\n    };\n    this.$el.orgchart({\n      'id': 'rootNode',\n      'data': data,\n      'nodeContent': 'title',\n      'pan': true\n    });\n  }\n\n  componentWillUnmount() {\n    this.$el.empty();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart-container\",\n      ref: el => this.el = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(StickyHeadTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StaffsList;","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/components/Staff/StaffsList.js"],"names":["React","$","OrgChart","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","length","StaffsList","Component","componentDidMount","$el","el","data","orgchart","componentWillUnmount","empty","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from \"jquery\";\nimport OrgChart from \"orgchart\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'population',\n        label: 'Population',\n        minWidth: 170,\n        align: 'right',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'size',\n        label: 'Size\\u00a0(km\\u00b2)',\n        minWidth: 170,\n        align: 'right',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'density',\n        label: 'Density',\n        minWidth: 170,\n        align: 'right',\n        format: value => value.toFixed(2),\n    },\n];\n\nfunction createData(name, code, population, size) {\n    const density = population / size;\n    return { name, code, population, size, density };\n}\n\nconst rows = [\n    createData('India', 'IN', 1324171354, 3287263),\n    createData('China', 'CN', 1403500365, 9596961),\n    createData('Italy', 'IT', 60483973, 301340),\n    createData('United States', 'US', 327167434, 9833520),\n    createData('Canada', 'CA', 37602103, 9984670),\n    createData('Australia', 'AU', 25475400, 7692024),\n    createData('Germany', 'DE', 83019200, 357578),\n    createData('Ireland', 'IE', 4857000, 70273),\n    createData('Mexico', 'MX', 126577691, 1972550),\n    createData('Japan', 'JP', 126317000, 377973),\n    createData('France', 'FR', 67022000, 640679),\n    createData('United Kingdom', 'GB', 67545757, 242495),\n    createData('Russia', 'RU', 146793744, 17098246),\n    createData('Nigeria', 'NG', 200962417, 923768),\n    createData('Brazil', 'BR', 210147125, 8515767),\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nfunction StickyHeadTable() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map(column => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map(column => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n\nclass StaffsList extends React.Component {\n    componentDidMount() {\n        this.$el = $(this.el);\n        let data = {\n            'name': 'Lao Lao',\n            'title': 'general manager',\n            'children': [\n                { 'name': 'Bo Miao', 'title': 'department manager', 'className': 'middle-level',\n                    'children': [\n                        { 'name': 'Li Jing', 'title': 'senior engineer', 'className': 'product-dept' },\n                        { 'name': 'Li Xin', 'title': 'senior engineer', 'className': 'product-dept',\n                            'children': [\n                                { 'name': 'To To', 'title': 'engineer', 'className': 'pipeline1' },\n                                { 'name': 'Fei Fei', 'title': 'engineer', 'className': 'pipeline1' },\n                                { 'name': 'Xuan Xuan', 'title': 'engineer', 'className': 'pipeline1' }\n                            ]\n                        }\n                    ]\n                },\n                { 'name': 'Su Miao', 'title': 'department manager', 'className': 'middle-level',\n                    'children': [\n                        { 'name': 'Pang Pang', 'title': 'senior engineer', 'className': 'rd-dept' },\n                        { 'name': 'Hei Hei', 'title': 'senior engineer', 'className': 'rd-dept',\n                            'children': [\n                                { 'name': 'Xiang Xiang', 'title': 'UE engineer', 'className': 'frontend1' },\n                                { 'name': 'Dan Dan', 'title': 'engineer', 'className': 'frontend1' },\n                                { 'name': 'Zai Zai', 'title': 'engineer', 'className': 'frontend1' }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n\n        this.$el.orgchart({\n            'id': 'rootNode',\n            'data' : data,\n            'nodeContent': 'title',\n            'pan': true,\n        });\n    }\n\n    componentWillUnmount() {\n        this.$el.empty();\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"chart-container\" ref={el => this.el = el}></div>\n\n                <StickyHeadTable></StickyHeadTable>\n            </div>\n        );\n    }\n}\n\nexport default StaffsList;\n"]},"metadata":{},"sourceType":"module"}