{"ast":null,"code":"var _jsxFileName = \"/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport windowSize from 'react-window-size';\nimport NavLogo from './NavLogo';\nimport NavContent from './NavContent';\nimport OutsideClick from './OutsideClick';\nimport Aux from './../../../../hoc/_Aux';\nimport * as actionTypes from './../../../../store/actions';\nimport navigation from '../../../../menu-items';\n\nclass Navigation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resize = () => {\n      const contentWidth = document.getElementById('root').clientWidth;\n\n      if (this.props.layout === 'horizontal' && contentWidth < 992) {\n        this.props.onChangeLayout('vertical');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.resize();\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    let navClass = ['pcoded-navbar'];\n\n    if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\n      navClass = [...navClass, this.props.preLayout];\n    } else {\n      navClass = [...navClass, this.props.layoutType, this.props.navBackColor, this.props.navBrandColor, 'drp-icon-' + this.props.navDropdownIcon, 'menu-item-icon-' + this.props.navListIcon, this.props.navActiveListColor, this.props.navListTitleColor];\n\n      if (this.props.layout === 'horizontal') {\n        navClass = [...navClass, 'theme-horizontal'];\n      }\n\n      if (this.props.navBackImage) {\n        navClass = [...navClass, this.props.navBackImage];\n      }\n\n      if (this.props.navIconColor) {\n        navClass = [...navClass, 'icon-colored'];\n      }\n\n      if (!this.props.navFixedLayout) {\n        navClass = [...navClass, 'menupos-static'];\n      }\n\n      if (this.props.navListTitleHide) {\n        navClass = [...navClass, 'caption-hide'];\n      }\n    }\n\n    if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n      navClass = [...navClass, 'mob-open'];\n    } else if (this.props.collapseMenu) {\n      navClass = [...navClass, 'navbar-collapsed'];\n    }\n\n    if (this.props.preLayout === 'layout-6') {\n      document.body.classList.add('layout-6');\n      document.body.style.backgroundImage = this.props.layout6Background;\n      document.body.style.backgroundSize = this.props.layout6BackSize;\n    }\n\n    if (this.props.preLayout === 'layout-8') {\n      document.body.classList.add('layout-8');\n    }\n\n    if (this.props.layoutType === 'dark') {\n      document.body.classList.add('datta-dark');\n    } else {\n      document.body.classList.remove('datta-dark');\n    }\n\n    if (this.props.rtlLayout) {\n      document.body.classList.add('datta-rtl');\n    } else {\n      document.body.classList.remove('datta-rtl');\n    }\n\n    if (this.props.boxLayout) {\n      document.body.classList.add('container');\n      document.body.classList.add('box-layout');\n    } else {\n      document.body.classList.remove('container');\n      document.body.classList.remove('box-layout');\n    }\n\n    let navContent = React.createElement(\"div\", {\n      className: \"navbar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(NavLogo, {\n      collapseMenu: this.props.collapseMenu,\n      windowWidth: this.props.windowWidth,\n      onToggleNavigation: this.props.onToggleNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(NavContent, {\n      navigation: navigation.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n\n    if (this.props.windowWidth < 992) {\n      navContent = React.createElement(OutsideClick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(NavLogo, {\n        collapseMenu: this.props.collapseMenu,\n        windowWidth: this.props.windowWidth,\n        onToggleNavigation: this.props.onToggleNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(NavContent, {\n        navigation: navigation.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: navClass.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, navContent));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    preLayout: state.preLayout,\n    collapseMenu: state.collapseMenu,\n    layoutType: state.layoutType,\n    navBackColor: state.navBackColor,\n    navBackImage: state.navBackImage,\n    navIconColor: state.navIconColor,\n    navBrandColor: state.navBrandColor,\n    layout6Background: state.layout6Background,\n    layout6BackSize: state.layout6BackSize,\n    rtlLayout: state.rtlLayout,\n    navFixedLayout: state.navFixedLayout,\n    boxLayout: state.boxLayout,\n    navDropdownIcon: state.navDropdownIcon,\n    navListIcon: state.navListIcon,\n    navActiveListColor: state.navActiveListColor,\n    navListTitleColor: state.navListTitleColor,\n    navListTitleHide: state.navListTitleHide\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleNavigation: () => dispatch({\n      type: actionTypes.COLLAPSE_MENU\n    }),\n    onChangeLayout: layout => dispatch({\n      type: actionTypes.CHANGE_LAYOUT,\n      layout: layout\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));","map":{"version":3,"sources":["/Users/Gio1378/Documents/_Cours_IMIE_1/VS/FinalProject2020/association-manager-front/src/App/layout/AdminLayout/Navigation/index.js"],"names":["React","Component","connect","withRouter","windowSize","NavLogo","NavContent","OutsideClick","Aux","actionTypes","navigation","Navigation","resize","contentWidth","document","getElementById","clientWidth","props","layout","onChangeLayout","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","navClass","preLayout","layoutType","navBackColor","navBrandColor","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navBackImage","navIconColor","navFixedLayout","navListTitleHide","windowWidth","collapseMenu","body","classList","add","style","backgroundImage","layout6Background","backgroundSize","layout6BackSize","remove","rtlLayout","boxLayout","navContent","onToggleNavigation","items","join","mapStateToProps","state","mapDispatchToProps","dispatch","type","COLLAPSE_MENU","CHANGE_LAYOUT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport windowSize from 'react-window-size';\n\nimport NavLogo from './NavLogo';\nimport NavContent from './NavContent';\nimport OutsideClick from './OutsideClick';\nimport Aux from './../../../../hoc/_Aux'\nimport * as actionTypes from './../../../../store/actions';\nimport navigation from '../../../../menu-items';\n\nclass Navigation extends Component {\n\n    resize = () => {\n        const contentWidth = document.getElementById('root').clientWidth;\n\n        if (this.props.layout === 'horizontal' && contentWidth < 992) {\n            this.props.onChangeLayout('vertical');\n        }\n    };\n\n    componentDidMount() {\n        this.resize();\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n        let navClass = [\n            'pcoded-navbar',\n        ];\n\n        if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\n            navClass = [...navClass, this.props.preLayout];\n        } else {\n            navClass = [\n                ...navClass,\n                this.props.layoutType,\n                this.props.navBackColor,\n                this.props.navBrandColor,\n                'drp-icon-'+this.props.navDropdownIcon,\n                'menu-item-icon-'+this.props.navListIcon,\n                this.props.navActiveListColor,\n                this.props.navListTitleColor,\n            ];\n\n            if (this.props.layout === 'horizontal') {\n                navClass = [...navClass, 'theme-horizontal'];\n            }\n\n            if (this.props.navBackImage) {\n                navClass = [...navClass, this.props.navBackImage];\n            }\n\n            if (this.props.navIconColor) {\n                navClass = [...navClass, 'icon-colored'];\n            }\n\n            if (!this.props.navFixedLayout) {\n                navClass = [...navClass, 'menupos-static'];\n            }\n\n            if (this.props.navListTitleHide) {\n                navClass = [...navClass, 'caption-hide'];\n            }\n        }\n\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n            navClass = [...navClass, 'mob-open'];\n        } else if (this.props.collapseMenu) {\n            navClass = [...navClass, 'navbar-collapsed'];\n        }\n\n        if (this.props.preLayout === 'layout-6') {\n            document.body.classList.add('layout-6');\n            document.body.style.backgroundImage = this.props.layout6Background;\n            document.body.style.backgroundSize = this.props.layout6BackSize;\n        }\n\n        if (this.props.preLayout === 'layout-8') {\n            document.body.classList.add('layout-8');\n        }\n\n        if (this.props.layoutType === 'dark') {\n            document.body.classList.add('datta-dark');\n        } else {\n            document.body.classList.remove('datta-dark');\n        }\n\n        if (this.props.rtlLayout) {\n            document.body.classList.add('datta-rtl');\n        } else {\n            document.body.classList.remove('datta-rtl');\n        }\n\n        if (this.props.boxLayout) {\n            document.body.classList.add('container');\n            document.body.classList.add('box-layout');\n        } else {\n            document.body.classList.remove('container');\n            document.body.classList.remove('box-layout');\n        }\n\n        let navContent = (\n            <div className=\"navbar-wrapper\">\n                <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\n                <NavContent navigation={navigation.items} />\n            </div>\n        );\n        if (this.props.windowWidth < 992) {\n            navContent = (\n                <OutsideClick>\n                    <div className=\"navbar-wrapper\">\n                        <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\n                        <NavContent navigation={navigation.items} />\n                    </div>\n                </OutsideClick>\n            );\n        }\n\n        return (\n            <Aux>\n                <nav className={navClass.join(' ')}>\n                    {navContent}\n                </nav>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.layout,\n        preLayout: state.preLayout,\n        collapseMenu: state.collapseMenu,\n        layoutType: state.layoutType,\n        navBackColor: state.navBackColor,\n        navBackImage: state.navBackImage,\n        navIconColor: state.navIconColor,\n        navBrandColor: state.navBrandColor,\n        layout6Background: state.layout6Background,\n        layout6BackSize: state.layout6BackSize,\n        rtlLayout: state.rtlLayout,\n        navFixedLayout: state.navFixedLayout,\n        boxLayout: state.boxLayout,\n        navDropdownIcon: state.navDropdownIcon,\n        navListIcon: state.navListIcon,\n        navActiveListColor: state.navActiveListColor,\n        navListTitleColor: state.navListTitleColor,\n        navListTitleHide: state.navListTitleHide\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\n        onChangeLayout: (layout) => dispatch({type: actionTypes.CHANGE_LAYOUT, layout: layout}),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));\n"]},"metadata":{},"sourceType":"module"}